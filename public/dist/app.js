angular.module("userApp",["ngAnimate","app.routes","authService","mainCtrl","userCtrl","userService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainController",controllerAs:"login"}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"userController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}),t.html5Mode(!0)}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$route","$location","Auth",function(e,t,r,n){var o=this;o.loggedIn=n.isLoggedIn(),e.$on("$routeChangeStart",function(){o.loggedIn=n.isLoggedIn(),n.getUser().then(function(e){o.user=e.data})}),o.doLogin=function(){o.processing=!0,n.login(o.loginData.username,o.loginData.password).success(function(e){o.processing=!1,e.success?r.path("/users"):(o.error=e.message,o.loginData.password="")})},o.doLogout=function(){n.logout(),o.user={},r.path("/login")}}]),angular.module("userCtrl",["userService"]).controller("userController",["User",function(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.users=e}),t.deleteUser=function(r){t.processing=!0,e["delete"](r).success(function(r){e.all().success(function(e){t.processing=!1,t.users=e})})}}]).controller("userCreateController",["User",function(e){var t=this;t.type="create",t.saveUser=function(){t.processing=!0,t.message="",e.create(t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}]).controller("userEditController",["$routeParams","User",function(e,t){var r=this;r.type="edit",t.get(e.user_id).success(function(e){r.userData=e}),r.saveUser=function(){r.processing=!0,r.message="",t.update(e.user_id,r.userData).success(function(e){r.processing=!1,r.userData={},r.message=e.message})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken","$cacheFactory",function(e,t,r,n){var o={};return o.login=function(t,n){return e.post("/api/authenticate",{username:t,password:n}).success(function(e){r.setToken(e.token)})},o.logout=function(){r.setToken();var e=n.get("$http");e.remove("/api/me")},o.isLoggedIn=function(){return r.getToken()?!0:!1},o.getUser=function(){return r.getToken()?e.get("/api/me",{cache:!0}):t.reject({message:"User has no token"})},o}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,r){var n={};return n.request=function(e){var t=r.getToken();return t&&(e.headers["x-access-token"]=t),e},n.responseError=function(n){return 403==n.status&&(r.setToken(),t.path("/login")),e.reject(n)},n}]),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users",t)},t.update=function(t,r){return e.put("/api/users/"+t,r)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t}]);